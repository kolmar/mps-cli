/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package org.mps_cli.gradle.plugin

class ModelBuildingTest extends TestBase {

    def "model extraction test"() {
        given:
        settingsFile << ""
        buildFile << "$buildPreamble" + '''

task printSolutionsInfo {
    dependsOn buildModel
    doLast {
        def repo = buildModel.repository
        
        def models = repo.allModels()
        println "all models: ${models.collect { it.name }}"
        
        def allNodes = repo.allNodes()
        println "concepts: ${allNodes.collect { it.concept.name }}"
        
        def authors = repo.nodesOfConcept("mps.cli.landefs.people.structure.Person")
        println "persons definitions: ${authors.collect { it.name }.sort()}"
        
        def books = repo.nodesOfConcept("mps.cli.landefs.library.structure.Book")
        println "books definitions: ${books.collect { it.name }.sort()}"
        
        def theMysteriousIsland = books.find { it.name.equals("The Mysterious Island") }
        println "'Mysterious Island' authors: ${theMysteriousIsland.authors.collect {it.person.resolve(repo).name }}"
        println "'Mysterious Island' publication date: ${theMysteriousIsland.publicationDate}"
        println "'Mysterious Island' available: ${theMysteriousIsland.available}"
        
        def magazines = repo.nodesOfConcept("mps.cli.landefs.library.structure.Magazine")
        println "magazines definitions: ${magazines.collect { it.name }}"
        
        def derSpiegel = magazines.find { it.name.equals("Der Spiegel") }
        println "'Der Spiegel' periodicity: ${derSpiegel.periodicity}"
    }
}

'''

        when:
        runTask("printSolutionsInfo")

        then:
        // check that we have models
        result.output.contains "mps.cli.lanuse.library_top.library_top"
        result.output.contains "mps.cli.lanuse.library_top.authors_top"
        result.output.contains "mps.cli.lanuse.library_second.library_top"

        // check nodes by name
        // persons
        result.output.contains "persons definitions: [Jules Verne, Mark Twain]"

        // book
        result.output.contains "books definitions: [Five Weeks in Baloon, The Mysterious Island, Tom Sawyer, Tom Sawyer]"
        result.output.contains "'Mysterious Island' authors: [Jules Verne]"
        result.output.contains "'Mysterious Island' publication date: 1875"
        result.output.contains "'Mysterious Island' available: true"

        // magazine
        result.output.contains "magazines definitions: [Der Spiegel]"
        result.output.contains "'Der Spiegel' periodicity: 4Yb5JA31wzt/WEEKLY"
    }
}
